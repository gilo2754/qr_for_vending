version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.txt
    ports:
      - "3000:3000"
    environment:
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - API_HOST=0.0.0.0
      - API_PORT=3000
      - DEBUG=True
    depends_on:
      - db
    networks:
      - qr-network

  db:
    build:
      context: .
      dockerfile: Dockerfile.db
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - qr-network

  mysql-backup:
    image: alpine:latest
    container_name: mysql-backup
    volumes:
      - ./backups:/backups
      - ./scripts:/scripts
      - mysql_data:/var/lib/mysql:ro
    environment:
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_ACCESS_TOKEN=${GOOGLE_ACCESS_TOKEN}
      - GOOGLE_REFRESH_TOKEN=${GOOGLE_REFRESH_TOKEN}
    entrypoint: ["/bin/sh", "-c", "chmod +x /scripts/backup-mysql.sh && apk add --no-cache mysql-client rclone && echo '0 3 * * * /scripts/backup-mysql.sh >> /var/log/cron.log 2>&1' > /etc/crontabs/root && crond -f -L /var/log/cron.log"]
    depends_on:
      - db
    networks:
      - qr-network
    env_file: stack.env

volumes:
  mysql_data:

networks:
  qr-network:
    driver: bridge
